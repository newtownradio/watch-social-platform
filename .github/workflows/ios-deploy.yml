name: Build and Deploy iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'
        
    - name: Force Xcode version
      run: |
        sudo xcode-select --switch /Applications/Xcode_16.2.app
        sudo xcode-select --install || true
        export DEVELOPER_DIR=/Applications/Xcode_16.2.app/Contents/Developer
        xcodebuild -version
        
    - name: Debug Xcode version
      run: |
        echo "=== Xcode Version ==="
        xcodebuild -version
        echo "=== Xcode Path ==="
        xcode-select -p
        echo "=== Available Xcode Versions ==="
        ls -la /Applications/ | grep Xcode
        
    - name: Clean build directory
      run: |
        cd BasedlyAI
        rm -rf build/
        rm -rf DerivedData/
        xcodebuild clean -project BasedlyAI.xcodeproj -target BasedlyAI
        
    - name: Set deployment target in project
      run: |
        cd BasedlyAI
        # Update deployment target in project.pbxproj - handle all variations
        sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 18\.5;/IPHONEOS_DEPLOYMENT_TARGET = 18.2;/g' BasedlyAI.xcodeproj/project.pbxproj
        sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = "18\.5";/IPHONEOS_DEPLOYMENT_TARGET = "18.2";/g' BasedlyAI.xcodeproj/project.pbxproj
        sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 18\.5;/IPHONEOS_DEPLOYMENT_TARGET = 18.2;/g' BasedlyAI.xcodeproj/project.pbxproj
        sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = "18\.5";/IPHONEOS_DEPLOYMENT_TARGET = "18.2";/g' BasedlyAI.xcodeproj/project.pbxproj
        # Also update any other deployment target references
        sed -i '' 's/18\.5/18.2/g' BasedlyAI.xcodeproj/project.pbxproj
        echo "=== Updated project.pbxproj deployment targets ==="
        grep -n "IPHONEOS_DEPLOYMENT_TARGET" BasedlyAI.xcodeproj/project.pbxproj
        
    - name: Convert project format if needed
      run: |
        cd BasedlyAI
        # Try to convert project format to be compatible
        xcodebuild -project BasedlyAI.xcodeproj -resolvePackageDependencies || true
        # Check project format version
        echo "=== Project Format Version ==="
        grep -A 5 -B 5 "objectVersion" BasedlyAI.xcodeproj/project.pbxproj || echo "No objectVersion found"
        
    - name: Verify deployment target and Xcode version
      run: |
        cd BasedlyAI
        echo "=== Current Xcode Version ==="
        xcodebuild -version
        echo "=== Current Xcode Path ==="
        xcode-select -p
        echo "=== Project Deployment Target ==="
        xcodebuild -showBuildSettings -project BasedlyAI.xcodeproj -target BasedlyAI | grep IPHONEOS_DEPLOYMENT_TARGET
        
    - name: Debug project structure
      run: |
        echo "=== Root Directory ==="
        ls -la
        echo "=== BasedlyAI Directory ==="
        ls -la BasedlyAI/
        echo "=== Xcode Project ==="
        ls -la BasedlyAI/BasedlyAI.xcodeproj/
        echo "=== App Contents ==="
        ls -la BasedlyAI/BasedlyAI/
        
    - name: List available schemes and targets
      run: |
        cd BasedlyAI
        echo "=== Available Schemes ==="
        xcodebuild -list -project BasedlyAI.xcodeproj
        echo "=== Build Configurations ==="
        xcodebuild -showBuildSettings -project BasedlyAI.xcodeproj -target BasedlyAI
        
    - name: Try simple build first (no signing)
      run: |
        cd BasedlyAI
        xcodebuild -project BasedlyAI.xcodeproj -target BasedlyAI -configuration Debug IPHONEOS_DEPLOYMENT_TARGET=18.2 CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO build
        
    - name: Create export options
      run: |
        cd BasedlyAI
        cat > exportOptions.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>development</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
        </dict>
        </plist>
        EOF
        
    - name: Build Release (no signing)
      run: |
        cd BasedlyAI
        xcodebuild -project BasedlyAI.xcodeproj -target BasedlyAI -configuration Release IPHONEOS_DEPLOYMENT_TARGET=18.2 CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO build
        
    - name: Verify Build Success
      run: |
        cd BasedlyAI
        echo "=== Build completed successfully ==="
        ls -la build/Release-iphoneos/BasedlyAI.app/ || echo "App bundle not found"
        
    - name: Create Simple IPA (no archiving required)
      run: |
        cd BasedlyAI
        # Create IPA directly from the build without archiving
        mkdir -p build/ipa/Payload
        cp -r build/Release-iphoneos/BasedlyAI.app build/ipa/Payload/
        cd build/ipa
        zip -r BasedlyAI.ipa Payload/
        echo "=== IPA created successfully ==="
        ls -la BasedlyAI.ipa
        file BasedlyAI.ipa
        
    - name: Upload to App Store Connect
      run: |
        cd BasedlyAI
        xcrun altool --upload-app --type ios --file build/ipa/BasedlyAI.ipa --username ${{ secrets.APPLE_ID }} --password ${{ secrets.APP_SPECIFIC_PASSWORD }} 