# Cloudflare Pages Headers Configuration
/*
  X-Frame-Options: SAMEORIGIN
  X-Content-Type-Options: nosniff
  Referrer-Policy: no-referrer-when-downgrade
  Permissions-Policy: camera=(), microphone=(), geolocation=()

/index.html
  Cache-Control: no-cache, no-store, must-revalidate

/*.html
  Cache-Control: no-cache, no-store, must-revalidate

/*.js
  Cache-Control: public, max-age=31536000, immutable

/*.css
  Cache-Control: public, max-age=31536000, immutable

/*.png
  Cache-Control: public, max-age=31536000, immutable

/*.jpg
  Cache-Control: public, max-age=31536000, immutable

/*.svg
  Cache-Control: public, max-age=31536000, immutable

/*.woff2
  Cache-Control: public, max-age=31536000, immutable
```

```toml:_redirects
# Cloudflare Pages Redirects
# Handle client-side routing
/*    /index.html   200
```

```yaml:cloudflare-pages.yml
# Cloudflare Pages Build Configuration
name: Watch.style Deployment

# Build settings
build:
  command: echo "No build required - static files"
  output: ThreadSocialAI
  environment:
    NODE_VERSION: 18

# Environment variables
env:
  NODE_ENV: production

# Functions (if needed later)
functions:
  directory: functions

# Custom domains
custom_domains:
  - watch.style
  - www.watch.style
```

Now let me create a simple deployment script:

```bash:deploy-cloudflare.sh
#!/bin/bash

# Cloudflare Pages Deployment Script
# Deploys watch.style to Cloudflare Pages

echo "üöÄ Starting Cloudflare Pages deployment for watch.style..."

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Check if Wrangler CLI is installed
if ! command -v wrangler &> /dev/null; then
    echo -e "${YELLOW}üì¶ Installing Wrangler CLI...${NC}"
    npm install -g wrangler
fi

# Check if logged in to Cloudflare
if ! wrangler whoami &> /dev/null; then
    echo -e "${YELLOW}üîê Please login to Cloudflare:${NC}"
    wrangler login
fi

# Create project if it doesn't exist
echo -e "${YELLOW}üìÅ Setting up Cloudflare Pages project...${NC}"
wrangler pages project create watch-style --production-branch main

# Deploy to Cloudflare Pages
echo -e "${YELLOW} Deploying to Cloudflare Pages...${NC}"
wrangler pages deploy ThreadSocialAI --project-name watch-style --branch main

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Deployment successful!${NC}"
    echo -e "${GREEN}üåê Your site is live at: https://watch.style${NC}"
    echo -e "${GREEN}üìä Dashboard: https://dash.cloudflare.com/pages${NC}"
else
    echo -e "${RED}‚ùå Deployment failed${NC}"
    exit 1
fi

echo -e "${GREEN} Watch.style is now live on Cloudflare Pages!${NC}"
```

And a GitHub Actions workflow for automatic deployments:

```yaml:.github/workflows/cloudflare-pages.yml
name: Deploy to Cloudflare Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Wrangler
      run: npm install -g wrangler
      
    - name: Deploy to Cloudflare Pages
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: watch-style
        directory: ThreadSocialAI
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
```

**To deploy right now:**

1. **Install Wrangler CLI:**
   ```bash
   npm install -g wrangler
   ```

2. **Login to Cloudflare:**
   ```bash
   wrangler login
   ```

3. **Run deployment:**
   ```bash
   chmod +x deploy-cloudflare.sh
   ./deploy-cloudflare.sh
   ```

**Or use the manual method:**

1. Go to [Cloudflare Dashboard](https://dash.cloudflare.com/pages)
2. Click "Create a project"
3. Connect your GitHub repo
4. Set build settings:
   - **Build command:** `echo "No build required"`
   - **Build output directory:** `ThreadSocialAI`
   - **Root directory:** `/`
5. Deploy!

**Benefits of Cloudflare Pages:**
- ‚úÖ **5-minute deployment**
- ‚úÖ **Automatic SSL/HTTPS**
- ‚úÖ **Global CDN** (200+ locations)
- ‚úÖ **DDoS protection**
- ‚úÖ **Free tier** (100,000 requests/month)
- ‚úÖ **Custom domain** support
- ‚úÖ **Git-based deployments**

**Your site will be live at:**
- **Production:** https://watch.style
- **Preview:** https://watch-style.pages.dev

Want me to run the deployment script now? üöÄ 